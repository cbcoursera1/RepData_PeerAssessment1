{
    "contents" : "---\ntitle: 'Reproducible Research Peer Assessment 1: Activity Monitoring Data'\nauthor: \"cbcoursera1\"\ndate: \"Wednesday, April 15, 2015\"\noutput:\n  html_document: default\n---\n\n## Loading and preprocessing the data\n\nFirst, we will load and preprocess the data. Since the data is included in the\noriginal repository, there is no need to download the dataset within R.\n\n```{r}\n\nlibrary(data.table)\n\n## then read the data, forcing colClasses\n\ndata <- read.table(\n        unz(\"activity.zip\", \"activity.csv\"),\n        header = T,\n        sep = \",\",\n        colClasses = c(\"numeric\", \"factor\", \"numeric\")\n)\n\ndata$datePOSIX <- as.Date(data$date, \"%Y-%m-%d\")\n\n```\n\n## What is mean total number of steps taken per day?\n\nFirst we'll calculate total steps taken per day, and mean and median of steps\nper day\n\n```{r}\n\ndailysteps <- data.frame(\n        date = character(),\n        tsteps = character()\n)\n        \nfor (x in unique(data$date)) {\n        total <- sum(data$steps[data$date == x], na.rm = T)\n        mean <- mean(data$steps[data$date == x], na.rm = T)\n        dailysteps <- rbind(dailysteps, data.frame(\n                date = x,\n                tsteps = total,\n                mnsteps = mean\n        ))\n}\n\n```\n\nHere the total steps per day\n\n```{r}\n\ndailysteps[, c(\"date\", \"tsteps\")]\n\n```\n\nAnd then plot it on a histogram\n\n```{r}\n\nhist(dailysteps$tsteps)\n\n```\n\nAnd then the mean and median for total daily steps\n\n```{r}\n\nprint(paste(\"Mean:\", mean(dailysteps$tsteps, na.rm = T)))\nprint(paste(\"Median:\", median(dailysteps$tsteps, na.rm = T)))\n\n```\n\n\n## What is the average daily activity pattern?\n\nNow let's see step trends by time over all dates\n\n```{r}\n\n## prepping the data first\n\nintervalsteps <- data.frame(\n        interval = character(),\n        tsteps = character(),\n        mnsteps = character()   ## mean steps\n)\n        \nfor (x in unique(data$interval)) {\n        total <- sum(data$steps[data$interval == x], na.rm = T)\n        mean <- mean(data$steps[data$interval == x], na.rm = T)\n        intervalsteps <- rbind(intervalsteps, data.frame(\n                interval = x,\n                tsteps = total,\n                mnsteps = mean        \n        ))\n}\n\n\n## then creating the plot\n\nplot(\n        intervalsteps$interval,\n        intervalsteps$mnsteps,\n        type = \"l\",\n        xlab = \"5-Minute Interval\",\n        ylab = \"Steps\",\n        main = \"Steps vs Interval\"\n)\n\n\n```\n\nLooks nice. Clearly there's some kind of trend toward greater activity in the\nmorning.\n\nThe interval with the highest activity is:\n\n```{r}\n\nm <- max(intervalsteps$mnsteps, na.rm = T)\nprint(paste(\n        \"Max: interval\",\n        intervalsteps$interval[intervalsteps$mnsteps == m],\n        \"at\", m, \"mean steps\"\n))\n\n```\n\n## Imputing missing values\n\nThere are a number of missing values from this dataset. In total there are:\n\n```{r}\n\nsum(is.na(data$steps))\n\n```\n\nLet's fill in these values. Should we use the mean daily steps, or mean steps\nfor the interval?\n\n```{r}\n\nprint(paste(\"SD of steps by day:\", sd(dailysteps$mnsteps, na.rm = T)))\nprint(paste(\"SD of steps by interval:\", sd(intervalsteps$mnsteps, na.rm = T)))\n\n\n```\n\nThere is greater variability by interval, so we'll use that to backfill our NA\nvalues.\n\n```{r}\n\ndataclean <- data\n\nfor (x in 1:nrow(dataclean)) {\n        if (is.na(dataclean$steps[x])) {\n                dataclean$steps[x] <- intervalsteps$mnsteps[match(dataclean$interval[x], intervalsteps$interval)]\n        }\n}\n\n## This was a tough one\n\n```\n\nLet's do the same analysis we did in #1 above, but against our clean dataset.\n\n```{r}\n\ncdailysteps <- data.frame(\n        date = character(),\n        tsteps = character()\n)\n        \nfor (x in unique(dataclean$date)) {\n        total <- sum(dataclean$steps[dataclean$date == x], na.rm = T)\n        mean <- mean(dataclean$steps[dataclean$date == x], na.rm = T)\n        cdailysteps <- rbind(cdailysteps, data.frame(\n                date = x,\n                tsteps = total,\n                mnsteps = mean\n        ))\n}\n\n```\n\nAnd then plot it on a histogram, along with our original data.\n\n```{r}\n\npar(mfrow = c(1,2))\n\nhist(dailysteps$tsteps)\n\nhist(cdailysteps$tsteps)\n\n```\n\nAnd compare the mean and median between the two sets.\n\n```{r}\n\nprint(paste(\"Original Mean:\", mean(dailysteps$tsteps, na.rm = T)))\nprint(paste(\"Clean Mean:\", mean(cdailysteps$tsteps, na.rm = T)))\nprint(paste(\"Original Median:\", median(dailysteps$tsteps, na.rm = T)))\nprint(paste(\"Clean Median:\", median(cdailysteps$tsteps, na.rm = T)))\n\n```\n\nLooks like what we would expect. The distribution is roughly similar, but we\nhave removed many of the NA values which skewed the number of days with low\nsteps higher. Since we've replaced irrelevant data with data that was based on\nthe mean of the existing distribution, it shouldn't be surprising that it's\nsimilar.\n\n## Are there differences in activity patterns between weekdays and weekends?\n\nGood question, let's see.\n\nFirst add a column to our clean dataset which breaks out weekday/weekend.\n\n```{r}\nlibrary(chron)\n\ndataclean$weekday[is.weekend(dataclean$datePOSIX) == FALSE] <- \"weekday\"\ndataclean$weekday[is.weekend(dataclean$datePOSIX) == TRUE] <- \"weekend\"\n\n```\n\nNow let's plot the averages over the interval periods\n\n```{r}\n\nlibrary(plyr)\n\ncintervalsteps <- data.frame(\n        interval = character(),\n        tsteps = character(),\n        mnsteps = character(),   ## mean steps\n        weekday = factor()\n)\n        \nfor (x in unique(dataclean$interval)) {\n        total <- sum(dataclean$steps[dataclean$interval == x & dataclean$weekday == \"weekday\"], na.rm = T)\n        mean <- mean(dataclean$steps[dataclean$interval == x & dataclean$weekday == \"weekday\"], na.rm = T)\n        cintervalsteps <- rbind(cintervalsteps, data.frame(\n                interval = x,\n                tsteps = total,\n                mnsteps = mean,\n                weekday = as.factor(\"weekday\")\n        ))\n}\n\nfor (x in unique(dataclean$interval)) {\n        total <- sum(dataclean$steps[dataclean$interval == x & dataclean$weekday == \"weekend\"], na.rm = T)\n        mean <- mean(dataclean$steps[dataclean$interval == x & dataclean$weekday == \"weekend\"], na.rm = T)\n        cintervalsteps <- rbind(cintervalsteps, data.frame(\n                interval = x,\n                tsteps = total,\n                mnsteps = mean,\n                weekday = as.factor(\"weekend\")\n        ))\n}\n\n\nlibrary(lattice)\n\nxyplot(mnsteps ~ interval | weekday, \n           data = cintervalsteps,\n           type = \"l\",\n           xlab = \"Interval\",\n           ylab = \"Number of steps\",\n           layout=c(1,2))\n\n\n```\n\n## That's it!",
    "created" : 1429138951765.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3710818951",
    "id" : "8D7090F1",
    "lastKnownWriteTime" : 1429139056,
    "path" : "C:/Users/Christopher/Documents/git/Data Science/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}